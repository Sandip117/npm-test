{"id":"node_modules/randexp/node_modules/ret/lib/index.js","dependencies":[{"name":"/home/sandip/npm-test/package.json","includedInParent":true,"mtime":1645213106402},{"name":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/package.json","includedInParent":true,"mtime":1645213106094},{"name":"./util","loc":{"line":1,"column":24,"index":24},"parent":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/index.js","resolved":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/util.js"},{"name":"./types","loc":{"line":2,"column":24,"index":59},"parent":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/index.js","resolved":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/types.js"},{"name":"./sets","loc":{"line":3,"column":24,"index":95},"parent":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/index.js","resolved":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/sets.js"},{"name":"./positions","loc":{"line":4,"column":24,"index":130},"parent":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/index.js","resolved":"/home/sandip/npm-test/node_modules/randexp/node_modules/ret/lib/positions.js"}],"generated":{"js":"var util      = require('./util');\nvar types     = require('./types');\nvar sets      = require('./sets');\nvar positions = require('./positions');\n\n\nmodule.exports = function(regexpStr) {\n  var i = 0, l, c,\n      start = { type: types.ROOT, stack: []},\n\n      // Keep track of last clause/group and stack.\n      lastGroup = start,\n      last = start.stack,\n      groupStack = [];\n\n\n  var repeatErr = function(i) {\n    util.error(regexpStr, 'Nothing to repeat at column ' + (i - 1));\n  };\n\n  // Decode a few escaped characters.\n  var str = util.strToChars(regexpStr);\n  l = str.length;\n\n  // Iterate through each character in string.\n  while (i < l) {\n    c = str[i++];\n\n    switch (c) {\n      // Handle escaped characters, inclues a few sets.\n      case '\\\\':\n        c = str[i++];\n\n        switch (c) {\n          case 'b':\n            last.push(positions.wordBoundary());\n            break;\n\n          case 'B':\n            last.push(positions.nonWordBoundary());\n            break;\n\n          case 'w':\n            last.push(sets.words());\n            break;\n\n          case 'W':\n            last.push(sets.notWords());\n            break;\n\n          case 'd':\n            last.push(sets.ints());\n            break;\n\n          case 'D':\n            last.push(sets.notInts());\n            break;\n\n          case 's':\n            last.push(sets.whitespace());\n            break;\n\n          case 'S':\n            last.push(sets.notWhitespace());\n            break;\n\n          default:\n            // Check if c is integer.\n            // In which case it's a reference.\n            if (/\\d/.test(c)) {\n              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });\n\n            // Escaped character.\n            } else {\n              last.push({ type: types.CHAR, value: c.charCodeAt(0) });\n            }\n        }\n\n        break;\n\n\n      // Positionals.\n      case '^':\n          last.push(positions.begin());\n        break;\n\n      case '$':\n          last.push(positions.end());\n        break;\n\n\n      // Handle custom sets.\n      case '[':\n        // Check if this class is 'anti' i.e. [^abc].\n        var not;\n        if (str[i] === '^') {\n          not = true;\n          i++;\n        } else {\n          not = false;\n        }\n\n        // Get all the characters in class.\n        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);\n\n        // Increase index by length of class.\n        i += classTokens[1];\n        last.push({\n            type: types.SET\n          , set: classTokens[0]\n          , not: not\n        });\n\n        break;\n\n\n      // Class of any character except \\n.\n      case '.':\n        last.push(sets.anyChar());\n        break;\n\n\n      // Push group onto stack.\n      case '(':\n        // Create group.\n        var group = {\n            type: types.GROUP\n          , stack: []\n          , remember: true\n        };\n\n        c = str[i];\n\n        // if if this is a special kind of group.\n        if (c === '?') {\n          c = str[i + 1];\n          i += 2;\n\n          // Match if followed by.\n          if (c === '=') {\n            group.followedBy = true;\n\n          // Match if not followed by.\n          } else if (c === '!') {\n            group.notFollowedBy = true;\n\n          } else if (c !== ':') {\n            util.error(regexpStr,\n                'Invalid group, character \\'' + c + '\\' after \\'?\\' at column ' +\n                (i - 1));\n          }\n\n          group.remember = false;\n        }\n\n        // Insert subgroup into current group stack.\n        last.push(group);\n\n        // Remember the current group for when the group closes.\n        groupStack.push(lastGroup);\n\n        // Make this new group the current group.\n        lastGroup = group;\n        last = group.stack;\n        break;\n\n\n      // Pop group out of stack.\n      case ')':\n        if (groupStack.length === 0) {\n          util.error(regexpStr, 'Unmatched ) at column ' + (i - 1));\n        }\n        lastGroup = groupStack.pop();\n\n        // Check if this group has a PIPE.\n        // To get back the correct last stack.\n        last = lastGroup.options ? lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;\n        break;\n\n\n      // Use pipe character to give more choices.\n      case '|':\n        // Create array where options are if this is the first PIPE\n        // in this clause.\n        if (!lastGroup.options) {\n          lastGroup.options = [lastGroup.stack];\n          delete lastGroup.stack;\n        }\n\n        // Create a new stack and add to options for rest of clause.\n        var stack = [];\n        lastGroup.options.push(stack);\n        last = stack;\n        break;\n\n\n      // Repetition.\n      // For every repetition, remove last element from last stack\n      // then insert back a RANGE object.\n      // This design is chosen because there could be more than\n      // one repetition symbols in a regex i.e. `a?+{2,3}`.\n      case '{':\n        var rs = /^(\\d+)(,(\\d+)?)?\\}/.exec(str.slice(i)), min, max;\n        if (rs !== null) {\n          min = parseInt(rs[1], 10);\n          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;\n          i += rs[0].length;\n\n          last.push({\n              type: types.REPETITION\n            , min: min\n            , max: max\n            , value: last.pop()\n          });\n        } else {\n          last.push({\n              type: types.CHAR\n            , value: 123\n          });\n        }\n        break;\n\n      case '?':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n            type: types.REPETITION\n          , min: 0\n          , max: 1\n          , value: last.pop()\n        });\n        break;\n\n      case '+':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n            type: types.REPETITION\n          , min: 1\n          , max: Infinity\n          , value: last.pop()\n        });\n        break;\n\n      case '*':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n            type: types.REPETITION\n          , min: 0\n          , max: Infinity\n          , value: last.pop()\n        });\n        break;\n\n\n      // Default is a character that is not `\\[](){}?+*^$`.\n      default:\n        last.push({\n            type: types.CHAR\n          , value: c.charCodeAt(0)\n        });\n    }\n\n  }\n\n  // Check if any groups have not been closed.\n  if (groupStack.length !== 0) {\n    util.error(regexpStr, 'Unterminated group');\n  }\n\n  return start;\n};\n\nmodule.exports.types = types;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/randexp/node_modules/ret/lib/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}}],"sources":{"node_modules/randexp/node_modules/ret/lib/index.js":"var util      = require('./util');\nvar types     = require('./types');\nvar sets      = require('./sets');\nvar positions = require('./positions');\n\n\nmodule.exports = function(regexpStr) {\n  var i = 0, l, c,\n      start = { type: types.ROOT, stack: []},\n\n      // Keep track of last clause/group and stack.\n      lastGroup = start,\n      last = start.stack,\n      groupStack = [];\n\n\n  var repeatErr = function(i) {\n    util.error(regexpStr, 'Nothing to repeat at column ' + (i - 1));\n  };\n\n  // Decode a few escaped characters.\n  var str = util.strToChars(regexpStr);\n  l = str.length;\n\n  // Iterate through each character in string.\n  while (i < l) {\n    c = str[i++];\n\n    switch (c) {\n      // Handle escaped characters, inclues a few sets.\n      case '\\\\':\n        c = str[i++];\n\n        switch (c) {\n          case 'b':\n            last.push(positions.wordBoundary());\n            break;\n\n          case 'B':\n            last.push(positions.nonWordBoundary());\n            break;\n\n          case 'w':\n            last.push(sets.words());\n            break;\n\n          case 'W':\n            last.push(sets.notWords());\n            break;\n\n          case 'd':\n            last.push(sets.ints());\n            break;\n\n          case 'D':\n            last.push(sets.notInts());\n            break;\n\n          case 's':\n            last.push(sets.whitespace());\n            break;\n\n          case 'S':\n            last.push(sets.notWhitespace());\n            break;\n\n          default:\n            // Check if c is integer.\n            // In which case it's a reference.\n            if (/\\d/.test(c)) {\n              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });\n\n            // Escaped character.\n            } else {\n              last.push({ type: types.CHAR, value: c.charCodeAt(0) });\n            }\n        }\n\n        break;\n\n\n      // Positionals.\n      case '^':\n          last.push(positions.begin());\n        break;\n\n      case '$':\n          last.push(positions.end());\n        break;\n\n\n      // Handle custom sets.\n      case '[':\n        // Check if this class is 'anti' i.e. [^abc].\n        var not;\n        if (str[i] === '^') {\n          not = true;\n          i++;\n        } else {\n          not = false;\n        }\n\n        // Get all the characters in class.\n        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);\n\n        // Increase index by length of class.\n        i += classTokens[1];\n        last.push({\n            type: types.SET\n          , set: classTokens[0]\n          , not: not\n        });\n\n        break;\n\n\n      // Class of any character except \\n.\n      case '.':\n        last.push(sets.anyChar());\n        break;\n\n\n      // Push group onto stack.\n      case '(':\n        // Create group.\n        var group = {\n            type: types.GROUP\n          , stack: []\n          , remember: true\n        };\n\n        c = str[i];\n\n        // if if this is a special kind of group.\n        if (c === '?') {\n          c = str[i + 1];\n          i += 2;\n\n          // Match if followed by.\n          if (c === '=') {\n            group.followedBy = true;\n\n          // Match if not followed by.\n          } else if (c === '!') {\n            group.notFollowedBy = true;\n\n          } else if (c !== ':') {\n            util.error(regexpStr,\n                'Invalid group, character \\'' + c + '\\' after \\'?\\' at column ' +\n                (i - 1));\n          }\n\n          group.remember = false;\n        }\n\n        // Insert subgroup into current group stack.\n        last.push(group);\n\n        // Remember the current group for when the group closes.\n        groupStack.push(lastGroup);\n\n        // Make this new group the current group.\n        lastGroup = group;\n        last = group.stack;\n        break;\n\n\n      // Pop group out of stack.\n      case ')':\n        if (groupStack.length === 0) {\n          util.error(regexpStr, 'Unmatched ) at column ' + (i - 1));\n        }\n        lastGroup = groupStack.pop();\n\n        // Check if this group has a PIPE.\n        // To get back the correct last stack.\n        last = lastGroup.options ? lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;\n        break;\n\n\n      // Use pipe character to give more choices.\n      case '|':\n        // Create array where options are if this is the first PIPE\n        // in this clause.\n        if (!lastGroup.options) {\n          lastGroup.options = [lastGroup.stack];\n          delete lastGroup.stack;\n        }\n\n        // Create a new stack and add to options for rest of clause.\n        var stack = [];\n        lastGroup.options.push(stack);\n        last = stack;\n        break;\n\n\n      // Repetition.\n      // For every repetition, remove last element from last stack\n      // then insert back a RANGE object.\n      // This design is chosen because there could be more than\n      // one repetition symbols in a regex i.e. `a?+{2,3}`.\n      case '{':\n        var rs = /^(\\d+)(,(\\d+)?)?\\}/.exec(str.slice(i)), min, max;\n        if (rs !== null) {\n          min = parseInt(rs[1], 10);\n          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;\n          i += rs[0].length;\n\n          last.push({\n              type: types.REPETITION\n            , min: min\n            , max: max\n            , value: last.pop()\n          });\n        } else {\n          last.push({\n              type: types.CHAR\n            , value: 123\n          });\n        }\n        break;\n\n      case '?':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n            type: types.REPETITION\n          , min: 0\n          , max: 1\n          , value: last.pop()\n        });\n        break;\n\n      case '+':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n            type: types.REPETITION\n          , min: 1\n          , max: Infinity\n          , value: last.pop()\n        });\n        break;\n\n      case '*':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n            type: types.REPETITION\n          , min: 0\n          , max: Infinity\n          , value: last.pop()\n        });\n        break;\n\n\n      // Default is a character that is not `\\[](){}?+*^$`.\n      default:\n        last.push({\n            type: types.CHAR\n          , value: c.charCodeAt(0)\n        });\n    }\n\n  }\n\n  // Check if any groups have not been closed.\n  if (groupStack.length !== 0) {\n    util.error(regexpStr, 'Unterminated group');\n  }\n\n  return start;\n};\n\nmodule.exports.types = types;\n"},"lineCount":279}},"error":null,"hash":"78a3e998ece546b60f802bca9558d766","cacheData":{"env":{}}}